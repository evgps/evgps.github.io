{"version":3,"sources":["webpack:///./src/images/projects/using-reinforcement-learning-in-the-algorithmic-trading/mast.mp4","webpack:///./src/images/projects/using-reinforcement-learning-in-the-algorithmic-trading/mast.jpg","webpack:///./src/pages/using-reinforcement-learning-in-the-algorithmic-trading.js"],"names":["module","exports","RLTradePage","data","path","allFile","edges","forEach","image","node","name","childImageSharp","fluid","title","mastImage","video","mastVideo","pathname","header","href","target","rel","projectQuery"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,oD,qBCA3CD,EAAOC,QAAU,IAA0B,oD,yMC4D5BC,UAlDf,YAAsC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KA0B3B,OAvBAD,EAAKE,QAAQC,MAAMC,SAAQ,SAAAC,GACzB,IAAMC,EAAOD,EAAMC,KAGnB,OAAQA,EAAKC,MACX,IAAK,OACID,EAAKE,gBAAgBC,MAC5B,MACF,IAAK,OACIH,EAAKE,gBAAgBC,MAC5B,MACF,IAAK,OACIH,EAAKE,gBAAgBC,MAC5B,MACF,IAAK,gBACaH,EAAKE,gBAAgBC,MACrC,MACF,IAAK,gBACaH,EAAKE,gBAAgBC,UAMzC,kBAAC,IAAD,CACEC,MAAM,0DACNL,MAAOM,IACPC,MAAOC,IACPC,SAAUb,GAEV,kBAAC,IAAD,CAASc,OAAO,+DACd,2BACM,uBAAGC,KAAK,mCAAmCC,OAAO,SAASC,IAAI,uBAA/D,SADN,QACyG,uBAAGF,KAAK,uCAAuCC,OAAO,SAC7JC,IAAI,uBADmG,QADzG,2CAkBD,IAAMC,EAAY","file":"component---src-pages-using-reinforcement-learning-in-the-algorithmic-trading-js-f0b3d24b892514986ee1.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/mast-fbabffcc05a5ce16318b1637ba619b5f.mp4\";","module.exports = __webpack_public_path__ + \"static/mast-eae81c97d4c118f700975f9cacf63ac8.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Project from '../templates/Project';\nimport Browser from '../components/Browser';\nimport Content from '../components/Content';\n\nimport mastImage from '../images/projects/using-reinforcement-learning-in-the-algorithmic-trading/mast.jpg';\nimport mastVideo from '../images/projects/using-reinforcement-learning-in-the-algorithmic-trading/mast.mp4';\n\nfunction RLTradePage({ data, path }) {\n  let blog, home, shop, shopSingleOne, shopSingleTwo;\n\n  data.allFile.edges.forEach(image => {\n    const node = image.node;\n\n    // eslint-disable-next-line default-case\n    switch (node.name) {\n      case 'blog':\n        blog = node.childImageSharp.fluid;\n        break;\n      case 'home':\n        home = node.childImageSharp.fluid;\n        break;\n      case 'shop':\n        shop = node.childImageSharp.fluid;\n        break;\n      case 'shop-single-1':\n        shopSingleOne = node.childImageSharp.fluid;\n        break;\n      case 'shop-single-2':\n        shopSingleTwo = node.childImageSharp.fluid;\n        break;\n    }\n  });\n\n  return (\n    <Project\n      title=\"Using Reinforcement Learning in the Algorithmic Trading\"\n      image={mastImage}\n      video={mastVideo}\n      pathname={path}\n    >\n      <Content header=\"Trading with recurrent actor-critic reinforcement learning.\">\n        <p>\n              <a href=\"https://arxiv.org/abs/2002.11523\" target=\"_blank\" rel=\"noopener noreferrer\">Paper</a> and <a href=\"https://github.com/evgps/a3c_trading\" target=\"_blank\"\n          rel=\"noopener noreferrer\">Code</a>.\n          Details will be on that page soon.\n        </p>\n      </Content>\n\n    </Project>\n  );\n}\n\nRLTradePage.propTypes = {\n  data: PropTypes.object.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default RLTradePage;\n\nexport const projectQuery = graphql`\n  query RLTradeQuery {\n    allFile(filter: {\n        extension: { regex: \"/(jpg)/\" }\n        relativeDirectory: {eq: \"projects/using-reinforcement-learning-in-the-algorithmic-trading\"}\n    }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxWidth: 1400) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}