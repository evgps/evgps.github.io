{"version":3,"sources":["webpack:///./src/components/CTA/index.js","webpack:///./src/components/Intro/index.js","webpack:///./src/components/Post/index.js","webpack:///./src/components/Posts/index.js","webpack:///./src/components/Project/index.js","webpack:///./src/components/Projects/index.js","webpack:///./src/pages/index.js"],"names":["CTA","useContext","TransitionContext","link","transitionElement","TransitionLink","className","to","Intro","introRef","useRef","opacity","useOpacityScroll","ref","style","Post","node","useAnimateOnScroll","itemProp","itemScope","itemType","data-aos","fields","slug","backgroundImage","frontmatter","image","publicURL","data-aos-duration","title","dateTime","date","dangerouslySetInnerHTML","__html","excerpt","Posts","posts","useState","postsLoaded","setPostsLoaded","onClick","displayedPosts","slice","map","key","loadMore","length","onKeyPress","role","tabIndex","id","data-aos-delay","Project","props","media","video","autoPlay","loop","muted","poster","type","src","alt","description","defaultProps","Projects","projects","leftProjects","rightProjects","forEach","project","idx","slugify","push","IndexPage","site","allMarkdownRemark","siteMetadata","edges"],"mappings":"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","file":"component---src-pages-index-js-40b754385fea4ab5256d.js","sourcesContent":["import React, { useContext } from 'react';\nimport TransitionContext from '../../templates/Context';\n\nimport './index.scss';\n\nfunction CTA() {\n  const { link, transitionElement } = useContext(TransitionContext);\n  const TransitionLink = link;\n\n  return (\n    <section className=\"cta bg-black\">\n      <TransitionLink\n        className=\"cta__link\"\n        to=\"/contact\"\n        transitionElement={transitionElement}\n      >\n        <span className=\"cta__text\">Let’s talk</span>\n      </TransitionLink>\n    </section>\n  );\n}\n\nexport default CTA;\n","import React, { useRef } from 'react';\nimport useOpacityScroll from '../../utils/useOpacityScroll';\n\nimport './index.scss';\n\nfunction Intro() {\n  const introRef = useRef(null);\n  const opacity = useOpacityScroll(introRef);\n\n  return (\n    <section className=\"intro bg-white rellax\" ref={introRef}>\n      <div className=\"grid\">\n        <div>\n          <h1 className=\"intro__text\" style={{ opacity }}>Hi, I’m Evgeny, Deep Learning Researcher.</h1>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Intro;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport TransitionContext from '../../templates/Context';\nimport useAnimateOnScroll from '../../utils/useAnimateOnScroll';\n\nimport './index.scss';\n\nfunction Post({ node }) {\n  useAnimateOnScroll();\n\n  const { link, transitionElement } = useContext(TransitionContext);\n  const TransitionLink = link;\n\n  return (\n    <article\n      className=\"post\"\n      itemProp=\"blogPost\"\n      itemScope\n      itemType=\"http://schema.org/BlogPosting\"\n      data-aos=\"slide-up\"\n    >\n      <TransitionLink\n        className=\"post__link\"\n        to={node.fields.slug}\n        transitionElement={transitionElement}\n        itemProp=\"url\"\n      >\n        <div className=\"post__img\">\n          <div className=\"post__scale\" data-aos=\"scale-down\">\n            <figure className=\"absolute-bg\" style={{ backgroundImage: `url('${node.frontmatter.image.publicURL}')` }} />\n          </div>\n        </div>\n        <header className=\"post__header\">\n          <h3 className=\"post__title\" itemProp=\"name\">\n            <span data-aos=\"slice-up\" data-aos-duration=\"400\">{node.frontmatter.title}</span>\n          </h3>\n          <p className=\"post__text\" data-aos=\"fade-in\" data-aos-duration=\"400\">\n            <time dateTime=\"\" itemProp=\"datePublished\">{node.frontmatter.date}</time> – <span itemProp=\"description\" dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n          </p>\n        </header>\n      </TransitionLink>\n    </article>\n  );\n}\n\nPost.propTypes = {\n  node: PropTypes.object.isRequired,\n};\n\nexport default Post;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useAnimateOnScroll from '../../utils/useAnimateOnScroll';\nimport Post from '../Post';\n\nimport './index.scss';\n\nfunction Posts({ posts }) {\n  const [postsLoaded, setPostsLoaded] = useState(3);\n  useAnimateOnScroll();\n\n  const onClick = () => {\n    setPostsLoaded(postsLoaded + 3);\n  };\n\n  const displayedPosts = posts.slice(0, postsLoaded).map(({ node }) => <Post node={node} key={node.fields.slug} />);\n  const loadMore = postsLoaded < posts.length ?\n    <span\n      className=\"posts__next\"\n      onClick={onClick}\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      Load More Articles\n    </span> :\n    <span className=\"posts__next posts__next--none\">No More Articles</span>\n  ;\n\n  return (\n    <section id=\"articles\" className=\"posts section-padding bg-white\">\n      <div className=\"grid\">\n        <h2 className=\"posts__title\">\n          <span data-aos=\"slice-up\" data-aos-duration=\"400\">Recent</span> <span data-aos=\"slice-up\" data-aos-duration=\"400\" data-aos-delay=\"100\">articles</span>\n        </h2>\n        <div className=\"posts__container\" itemScope itemType=\"http://schema.org/Blog\">\n          {displayedPosts}\n        </div>\n        <div className=\"posts__pagination\">\n          {loadMore}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\n\nexport default Posts;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport TransitionContext from '../../templates/Context';\nimport useAnimateOnScroll from '../../utils/useAnimateOnScroll';\n\nimport './index.scss';\n\nfunction Project(props) {\n  useAnimateOnScroll();\n\n  const { link, transitionElement } = useContext(TransitionContext);\n  const TransitionLink = link;\n\n  const media = props.video ? (\n    <div className=\"project__vid\">\n      <div className=\"project__scale\" data-aos=\"scale-down\">\n        <video autoPlay loop muted poster={props.image}>\n          <source type=\"video/mp4\" src={props.video} />\n        </video>\n      </div>\n    </div>\n  ) : (\n    <figure className=\"project__img\">\n      <div className=\"project__scale\" data-aos=\"scale-down\">\n        <img src={props.image} alt={props.title} />\n      </div>\n    </figure>\n  );\n\n  return (\n    <article className=\"project\" data-aos=\"slide-up\">\n      <TransitionLink\n        className=\"project__link\"\n        to={props.link}\n        transitionElement={transitionElement}\n      >\n        {media}\n        <header className=\"project__header\">\n          <h3 className=\"project__title\">\n            <span data-aos=\"slice-up\" data-aos-duration=\"400\">{props.title}</span>\n          </h3>\n          <p className=\"project__text\" data-aos=\"fade-in\" data-aos-duration=\"400\" data-aos-delay=\"100\">{props.description}</p>\n        </header>\n      </TransitionLink>\n    </article>\n  );\n}\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  video: PropTypes.string,\n};\n\nProject.defaultProps = {\n  video: '',\n};\n\nexport default Project;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useAnimateOnScroll from '../../utils/useAnimateOnScroll';\nimport Project from '../Project';\nimport slugify from '../../utils/slugify';\n\nimport './index.scss';\n\nfunction Projects({ projects }) {\n  useAnimateOnScroll();\n\n  const leftProjects = [];\n  const rightProjects = [];\n\n  projects.forEach((project, idx) => {\n    const slug = `/${slugify(project.title)}/`;\n\n    if (idx % 2 === 0) {\n      leftProjects.push(<Project key={slug} link={slug} {...project} />);\n    } else {\n      rightProjects.push(<Project key={slug} link={slug} {...project} />);\n    }\n  });\n\n  return (\n    <section id=\"projects\" className=\"projects section-padding bg-lightgrey\">\n      <div className=\"grid\">\n        <h2 className=\"projects__title\">\n          <span data-aos=\"slice-up\" data-aos-duration=\"400\">Selected</span> <span data-aos=\"slice-up\" data-aos-duration=\"400\" data-aos-delay=\"100\">projects</span>\n        </h2>\n        <div className=\"projects__container\">\n          <div>\n            {leftProjects}\n          </div>\n          <div>\n            {rightProjects}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nProjects.propTypes = {\n  projects: PropTypes.array.isRequired,\n};\n\nexport default Projects;\n","import React, { Fragment } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport CTA from '../components/CTA';\nimport Intro from '../components/Intro';\nimport Posts from '../components/Posts';\nimport Projects from '../components/Projects';\n\nfunction IndexPage() {\n  const { site, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          projects {\n            description\n            image\n            title\n            video\n          }\n        }\n      }\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            excerpt(pruneLength: 130, truncate: true)\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              date(formatString: \"MMMM YYYY\")\n              image {\n                publicURL\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const projects = site.siteMetadata.projects;\n  const posts = allMarkdownRemark.edges;\n\n  return (\n    <Fragment>\n      <Intro />\n      <Projects projects={projects} />\n      <Posts posts={posts} />\n      <CTA />\n    </Fragment>\n  );\n}\n\nexport default IndexPage;\n"],"sourceRoot":""}