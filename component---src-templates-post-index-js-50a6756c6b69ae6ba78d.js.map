{"version":3,"sources":["webpack:///./src/components/Mast/index.js","webpack:///./src/templates/Post/index.js"],"names":["Mast","props","mastRef","useRef","opacity","useOpacityScroll","classNames","backgroundImage","backgroundVideo","media","className","autoPlay","loop","muted","type","src","style","ref","itemProp","title","date","dateTime","defaultProps","Post","post","data","markdownRemark","frontmatter","description","image","publicURL","pathname","fields","slug","article","itemScope","itemType","id","dangerouslySetInnerHTML","__html","html","postQuery"],"mappings":"qHAAA,+CAMA,SAASA,EAAKC,GACZ,IAAMC,EAAUC,iBAAO,MACjBC,EAAUC,YAAiBH,GAE3BI,EAAaL,EAAMM,iBAAmBN,EAAMO,gBAAkB,uBAAyB,oBAEzFC,EAAQ,KAaZ,OAZIR,EAAMO,gBACRC,EACE,yBAAKC,UAAU,gBACb,2BAAOC,UAAQ,EAACC,MAAI,EAACC,OAAK,GACxB,4BAAQC,KAAK,YAAYC,IAAKd,EAAMO,oBAIjCP,EAAMM,kBACfE,EAAQ,4BAAQC,UAAU,cAAcM,MAAO,CAAET,gBAAgB,QAASN,EAAMM,gBAAhB,SAIhE,6BAASG,UAAcJ,EAAL,UAA0BW,IAAKf,GAC9CO,EACD,yBAAKC,UAAU,QACb,yBAAKA,UAAU,kBAAkBM,MAAO,CAAEZ,YACxC,wBAAIM,UAAU,cAAcQ,SAAS,iBAAiBjB,EAAMkB,OAC3DlB,EAAMmB,MAAQ,0BAAMV,UAAU,aAAaW,SAAS,GAAGH,SAAS,iBAAiBjB,EAAMmB,SAelGpB,EAAKsB,aAAe,CAClBF,KAAM,GACNb,gBAAiB,KACjBC,gBAAiB,MAGJR,O,kCCpDf,4GAqCeuB,UA7Bf,YAAyB,IACjBC,EADgB,EAARC,KACIC,eAElB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEP,MAAOK,EAAKG,YAAYR,MACxBS,YAAaJ,EAAKG,YAAYC,YAC9BC,MAAOL,EAAKG,YAAYE,MAAMC,UAC9BC,SAAUP,EAAKQ,OAAOC,KACtBC,SAAO,IAET,6BAAShB,SAAS,WAAWiB,WAAS,EAACC,SAAS,iCAC9C,kBAAC,IAAD,CAAMjB,MAAOK,EAAKG,YAAYR,MAAOC,KAAMI,EAAKG,YAAYP,OAE5D,6BAASV,UAAU,4BACjB,yBAAKA,UAAU,cACb,yBAAK2B,GAAG,WAAWnB,SAAS,cAAcoB,wBAAyB,CAAEC,OAAQf,EAAKgB,aAcvF,IAAMC,EAAS,c","file":"component---src-templates-post-index-js-50a6756c6b69ae6ba78d.js","sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport useOpacityScroll from '../../utils/useOpacityScroll';\n\nimport './index.scss';\n\nfunction Mast(props) {\n  const mastRef = useRef(null);\n  const opacity = useOpacityScroll(mastRef);\n\n  const classNames = props.backgroundImage || props.backgroundVideo ? 'mast--media bg-black' : 'mast bg-lightgrey';\n\n  let media = null;\n  if (props.backgroundVideo) {\n    media = (\n      <div className=\"absolute-vid\">\n        <video autoPlay loop muted>\n          <source type=\"video/mp4\" src={props.backgroundVideo} />\n        </video>\n      </div>\n    );\n  } else if (props.backgroundImage) {\n    media = <figure className=\"absolute-bg\" style={{ backgroundImage: `url('${props.backgroundImage}')` }} />;\n  }\n\n  return (\n    <section className={`${classNames} rellax`} ref={mastRef}>\n      {media}\n      <div className=\"grid\">\n        <div className=\"mast__container\" style={{ opacity }}>\n          <h1 className=\"mast__title\" itemProp=\"name headline\">{props.title}</h1>\n          {props.date && <time className=\"mast__date\" dateTime=\"\" itemProp=\"datePublished\">{props.date}</time>}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nMast.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string,\n  backgroundImage: PropTypes.string,\n  backgroundVideo: PropTypes.string,\n};\n\nMast.defaultProps = {\n  date: '',\n  backgroundImage: null,\n  backgroundVideo: null,\n};\n\nexport default Mast;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Mast from '../../components/Mast';\nimport SEO from '../../components/SEO';\n\nimport './index.scss';\n\nfunction Post({ data }) {\n  const post = data.markdownRemark;\n\n  return (\n    <Fragment>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description}\n        image={post.frontmatter.image.publicURL}\n        pathname={post.fields.slug}\n        article\n      />\n      <article itemProp=\"blogPost\" itemScope itemType=\"http://schema.org/BlogPosting\">\n        <Mast title={post.frontmatter.title} date={post.frontmatter.date} />\n\n        <section className=\"section-padding bg-white\">\n          <div className=\"grid-small\">\n            <div id=\"markdown\" itemProp=\"articleBody\" dangerouslySetInnerHTML={{ __html: post.html }} />\n          </div>\n        </section>\n      </article>\n    </Fragment>\n  );\n}\n\nPost.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Post;\n\nexport const postQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        description\n        date(formatString: \"MMMM YYYY\")\n        image {\n          publicURL\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}